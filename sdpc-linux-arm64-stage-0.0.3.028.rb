# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
class Sdpc < Formula
  desc "Manage content in multi platforms."
  homepage "https://github.com/JacobLi11/ssw"
  version "1.0.4"

  depends_on "git"

  on_macos do
    if Hardware::CPU.arm?
      url "https://s3.us-west-2.amazonaws.com/splashlock-assets.splashshield.ai/sdpc/stage/linux/sdpc-linux-arm64-stage-0.0.3.028.zip"
      sha256 "9872fc2ce9d84976f319312542b2f351213ea03c3f973134227514648cf64e4f"

      def install
        bin.install "sdpc-linux-arm64"
        # Install bash completion
        output = Utils.safe_popen_read("#{bin}/sdpc-linux-arm64", "completion", "bash")
        (bash_completion/"sdpc-linux-arm64").write output
        # Install zsh completion
        output = Utils.safe_popen_read("#{bin}/sdpc-linux-arm64", "completion", "zsh")
        (zsh_completion/"_sdpc-linux-arm64").write output
      end
    end
    if Hardware::CPU.intel?
      url "https://s3.us-west-2.amazonaws.com/splashlock-assets.splashshield.ai/sdpc/stage/linux/sdpc-linux-arm64-stage-0.0.3.028.zip"
      sha256 "9872fc2ce9d84976f319312542b2f351213ea03c3f973134227514648cf64e4f"

      def install
        bin.install "sdpc-linux-arm64"
        # Install bash completion
        output = Utils.safe_popen_read("#{bin}/acli", "completion", "bash")
        (bash_completion/"sdpc-linux-arm64").write output
        # Install zsh completion
        output = Utils.safe_popen_read("#{bin}/acli", "completion", "zsh")
        (zsh_completion/"_sdpc-linux-arm64").write output
      end
    end
  end

  # test do
  #   system "#{bin}/sdpc-linux-arm64 version"
  # end
end